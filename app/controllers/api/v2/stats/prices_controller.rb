class API::V2::Stats::PricesController < API::V2::APIController
  def index
    url1 = "http://localhost:3000/api/v2/stats/prices/T2_HEAD_LEATHER_SET1,T2_HEAD_LEATHER_SET2,T2_HEAD_LEATHER_SET3,T2_HEAD_LEATHER_MORGANA,T2_HEAD_LEATHER_HELL,T2_HEAD_LEATHER_UNDEAD,T2_HEAD_LEATHER_FEY,T2_HEAD_LEATHER_AVALON,,T3_HEAD_LEATHER_SET1,T3_HEAD_LEATHER_SET2,T3_HEAD_LEATHER_SET3,T3_HEAD_LEATHER_MORGANA,T3_HEAD_LEATHER_HELL,T3_HEAD_LEATHER_UNDEAD,T3_HEAD_LEATHER_FEY,T3_HEAD_LEATHER_AVALON,,T4_HEAD_LEATHER_SET1,T4_HEAD_LEATHER_SET2,T4_HEAD_LEATHER_SET3,T4_HEAD_LEATHER_MORGANA,T4_HEAD_LEATHER_HELL,T4_HEAD_LEATHER_UNDEAD,T4_HEAD_LEATHER_FEY,T4_HEAD_LEATHER_AVALON,,T4_HEAD_LEATHER_SET1@1,T4_HEAD_LEATHER_SET2@1,T4_HEAD_LEATHER_SET3@1,T4_HEAD_LEATHER_MORGANA@1,T4_HEAD_LEATHER_HELL@1,T4_HEAD_LEATHER_UNDEAD@1,T4_HEAD_LEATHER_FEY@1,T4_HEAD_LEATHER_AVALON@1,,T4_HEAD_LEATHER_SET1@2,T4_HEAD_LEATHER_SET2@2,T4_HEAD_LEATHER_SET3@2,T4_HEAD_LEATHER_MORGANA@2,T4_HEAD_LEATHER_HELL@2,T4_HEAD_LEATHER_UNDEAD@2,T4_HEAD_LEATHER_FEY@2,T4_HEAD_LEATHER_AVALON@2,,T4_HEAD_LEATHER_SET1@3,T4_HEAD_LEATHER_SET2@3,T4_HEAD_LEATHER_SET3@3,T4_HEAD_LEATHER_MORGANA@3,T4_HEAD_LEATHER_HELL@3,T4_HEAD_LEATHER_UNDEAD@3,T4_HEAD_LEATHER_FEY@3,T4_HEAD_LEATHER_AVALON@3,,T4_HEAD_LEATHER_SET1@4,T4_HEAD_LEATHER_SET2@4,T4_HEAD_LEATHER_SET3@4,T4_HEAD_LEATHER_MORGANA@4,T4_HEAD_LEATHER_HELL@4,T4_HEAD_LEATHER_UNDEAD@4,T4_HEAD_LEATHER_FEY@4,T4_HEAD_LEATHER_AVALON@4,,T5_HEAD_LEATHER_SET1,T5_HEAD_LEATHER_SET2,T5_HEAD_LEATHER_SET3,T5_HEAD_LEATHER_MORGANA,T5_HEAD_LEATHER_HELL,T5_HEAD_LEATHER_UNDEAD,T5_HEAD_LEATHER_FEY,T5_HEAD_LEATHER_AVALON,,T5_HEAD_LEATHER_SET1@1,T5_HEAD_LEATHER_SET2@1,T5_HEAD_LEATHER_SET3@1,T5_HEAD_LEATHER_MORGANA@1,T5_HEAD_LEATHER_HELL@1,T5_HEAD_LEATHER_UNDEAD@1,T5_HEAD_LEATHER_FEY@1,T5_HEAD_LEATHER_AVALON@1,,T5_HEAD_LEATHER_SET1@2,T5_HEAD_LEATHER_SET2@2,T5_HEAD_LEATHER_SET3@2,T5_HEAD_LEATHER_MORGANA@2,T5_HEAD_LEATHER_HELL@2,T5_HEAD_LEATHER_UNDEAD@2,T5_HEAD_LEATHER_FEY@2,T5_HEAD_LEATHER_AVALON@2,,T5_HEAD_LEATHER_SET1@3,T5_HEAD_LEATHER_SET2@3,T5_HEAD_LEATHER_SET3@3,T5_HEAD_LEATHER_MORGANA@3,T5_HEAD_LEATHER_HELL@3,T5_HEAD_LEATHER_UNDEAD@3,T5_HEAD_LEATHER_FEY@3,T5_HEAD_LEATHER_AVALON@3,,T5_HEAD_LEATHER_SET1@4,T5_HEAD_LEATHER_SET2@4,T5_HEAD_LEATHER_SET3@4,T5_HEAD_LEATHER_MORGANA@4,T5_HEAD_LEATHER_HELL@4,T5_HEAD_LEATHER_UNDEAD@4,T5_HEAD_LEATHER_FEY@4,T5_HEAD_LEATHER_AVALON@4,,T6_HEAD_LEATHER_SET1,T6_HEAD_LEATHER_SET2,T6_HEAD_LEATHER_SET3,T6_HEAD_LEATHER_MORGANA,T6_HEAD_LEATHER_HELL,T6_HEAD_LEATHER_UNDEAD,T6_HEAD_LEATHER_FEY,T6_HEAD_LEATHER_AVALON,,T6_HEAD_LEATHER_SET1@1,T6_HEAD_LEATHER_SET2@1,T6_HEAD_LEATHER_SET3@1,T6_HEAD_LEATHER_MORGANA@1,T6_HEAD_LEATHER_HELL@1,T6_HEAD_LEATHER_UNDEAD@1,T6_HEAD_LEATHER_FEY@1,T6_HEAD_LEATHER_AVALON@1,?locations=5003,3005&qualities=2"
    url2 = "https://west.albion-online-data.com/api/v2/stats/prices/T2_HEAD_LEATHER_SET1,T2_HEAD_LEATHER_SET2,T2_HEAD_LEATHER_SET3,T2_HEAD_LEATHER_MORGANA,T2_HEAD_LEATHER_HELL,T2_HEAD_LEATHER_UNDEAD,T2_HEAD_LEATHER_FEY,T2_HEAD_LEATHER_AVALON,,T3_HEAD_LEATHER_SET1,T3_HEAD_LEATHER_SET2,T3_HEAD_LEATHER_SET3,T3_HEAD_LEATHER_MORGANA,T3_HEAD_LEATHER_HELL,T3_HEAD_LEATHER_UNDEAD,T3_HEAD_LEATHER_FEY,T3_HEAD_LEATHER_AVALON,,T4_HEAD_LEATHER_SET1,T4_HEAD_LEATHER_SET2,T4_HEAD_LEATHER_SET3,T4_HEAD_LEATHER_MORGANA,T4_HEAD_LEATHER_HELL,T4_HEAD_LEATHER_UNDEAD,T4_HEAD_LEATHER_FEY,T4_HEAD_LEATHER_AVALON,,T4_HEAD_LEATHER_SET1@1,T4_HEAD_LEATHER_SET2@1,T4_HEAD_LEATHER_SET3@1,T4_HEAD_LEATHER_MORGANA@1,T4_HEAD_LEATHER_HELL@1,T4_HEAD_LEATHER_UNDEAD@1,T4_HEAD_LEATHER_FEY@1,T4_HEAD_LEATHER_AVALON@1,,T4_HEAD_LEATHER_SET1@2,T4_HEAD_LEATHER_SET2@2,T4_HEAD_LEATHER_SET3@2,T4_HEAD_LEATHER_MORGANA@2,T4_HEAD_LEATHER_HELL@2,T4_HEAD_LEATHER_UNDEAD@2,T4_HEAD_LEATHER_FEY@2,T4_HEAD_LEATHER_AVALON@2,,T4_HEAD_LEATHER_SET1@3,T4_HEAD_LEATHER_SET2@3,T4_HEAD_LEATHER_SET3@3,T4_HEAD_LEATHER_MORGANA@3,T4_HEAD_LEATHER_HELL@3,T4_HEAD_LEATHER_UNDEAD@3,T4_HEAD_LEATHER_FEY@3,T4_HEAD_LEATHER_AVALON@3,,T4_HEAD_LEATHER_SET1@4,T4_HEAD_LEATHER_SET2@4,T4_HEAD_LEATHER_SET3@4,T4_HEAD_LEATHER_MORGANA@4,T4_HEAD_LEATHER_HELL@4,T4_HEAD_LEATHER_UNDEAD@4,T4_HEAD_LEATHER_FEY@4,T4_HEAD_LEATHER_AVALON@4,,T5_HEAD_LEATHER_SET1,T5_HEAD_LEATHER_SET2,T5_HEAD_LEATHER_SET3,T5_HEAD_LEATHER_MORGANA,T5_HEAD_LEATHER_HELL,T5_HEAD_LEATHER_UNDEAD,T5_HEAD_LEATHER_FEY,T5_HEAD_LEATHER_AVALON,,T5_HEAD_LEATHER_SET1@1,T5_HEAD_LEATHER_SET2@1,T5_HEAD_LEATHER_SET3@1,T5_HEAD_LEATHER_MORGANA@1,T5_HEAD_LEATHER_HELL@1,T5_HEAD_LEATHER_UNDEAD@1,T5_HEAD_LEATHER_FEY@1,T5_HEAD_LEATHER_AVALON@1,,T5_HEAD_LEATHER_SET1@2,T5_HEAD_LEATHER_SET2@2,T5_HEAD_LEATHER_SET3@2,T5_HEAD_LEATHER_MORGANA@2,T5_HEAD_LEATHER_HELL@2,T5_HEAD_LEATHER_UNDEAD@2,T5_HEAD_LEATHER_FEY@2,T5_HEAD_LEATHER_AVALON@2,,T5_HEAD_LEATHER_SET1@3,T5_HEAD_LEATHER_SET2@3,T5_HEAD_LEATHER_SET3@3,T5_HEAD_LEATHER_MORGANA@3,T5_HEAD_LEATHER_HELL@3,T5_HEAD_LEATHER_UNDEAD@3,T5_HEAD_LEATHER_FEY@3,T5_HEAD_LEATHER_AVALON@3,,T5_HEAD_LEATHER_SET1@4,T5_HEAD_LEATHER_SET2@4,T5_HEAD_LEATHER_SET3@4,T5_HEAD_LEATHER_MORGANA@4,T5_HEAD_LEATHER_HELL@4,T5_HEAD_LEATHER_UNDEAD@4,T5_HEAD_LEATHER_FEY@4,T5_HEAD_LEATHER_AVALON@4,,T6_HEAD_LEATHER_SET1,T6_HEAD_LEATHER_SET2,T6_HEAD_LEATHER_SET3,T6_HEAD_LEATHER_MORGANA,T6_HEAD_LEATHER_HELL,T6_HEAD_LEATHER_UNDEAD,T6_HEAD_LEATHER_FEY,T6_HEAD_LEATHER_AVALON,,T6_HEAD_LEATHER_SET1@1,T6_HEAD_LEATHER_SET2@1,T6_HEAD_LEATHER_SET3@1,T6_HEAD_LEATHER_MORGANA@1,T6_HEAD_LEATHER_HELL@1,T6_HEAD_LEATHER_UNDEAD@1,T6_HEAD_LEATHER_FEY@1,T6_HEAD_LEATHER_AVALON@1,?locations=5003,3005&qualities=2"


    render json: [url1, url2].to_json
  end

  def show

    sorted_results = MarketDataService.new.get_stats(params)

    respond_to do |format|
      # format.xml { render xml: JSON.parse(get_stats.to_json).to_xml(:root => :my_root) }
      format.xml { render xml: show_xml(sorted_results) }
      format.json { render json: sorted_results }
    end
  end

  def show_xml(sorted_results)
    xml_results = []
    sorted_results.each do |r|
      xml_results << {
        "ItemTypeID": r[:item_id],
        "City": r[:city],
        "QualityLevel": r[:quality],
        "SellPriceMin": r[:sell_price_min],
        "SellPriceMinDate": r[:sell_price_min_date],
        "SellPriceMax": r[:sell_price_max],
        "SellPriceMaxDate": r[:sell_price_max_date],
        "BuyPriceMin": r[:buy_price_min],
        "BuyPriceMinDate": r[:buy_price_min_date],
        "BuyPriceMax": r[:buy_price_max],
        "BuyPriceMaxDate": r[:buy_price_max_date],

      }
    end

    xml_results.to_xml(root: :ArrayOfMarketResponse, skip_types: true)
  end

  def show_table
    sorted_results = MarketDataService.new.get_stats(params)

    fields = [:item_id, :city, :quality, :sell_price_min, :sell_price_min_date, :sell_price_max,
              :sell_price_max_date, :buy_price_min, :buy_price_min_date, :buy_price_max, :buy_price_max_date]

    rows = []
    rows << "<head><style>table, th, td {border: 1px solid black;border-collapse: collapse;}</style></head><body>"
    rows << "<table style='width:100%'>"
    rows << "<tr>"
    fields.each do |f|
      rows << "<th>#{f.to_s}</th>"
    end
    rows << "</tr>"


    default_date = DateTime.new(0001, 1, 1, 0, 0, 0).strftime('%Y-%m-%dT%H:%M:%S')
    sorted_results.each do |r|
      row = []
      row << "<tr>"
      fields.each do |f|
        row << (r[f] == 0 || r[f] == default_date ? "<td></td>" : "<td>#{r[f]}</td>")
      end
      row << "</tr>"
      rows << row.join('')
    end
    rows << "</table></body>"
    html = rows.join('')

    render html: html.html_safe
  end



end
